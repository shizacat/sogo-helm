apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sogo.fullname" . }}
  labels:
    {{- include "sogo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "sogo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sogo.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sogo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-static
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: static-data
              mountPath: /var/www/html
          command:
            - "sh"
            - "-c"
            - "cp -r /usr/lib/GNUstep/SOGo/WebServerResources/ /var/www/html;"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-WONoDetach"
            - "YES"
            - "-WOPidFile"
            - "/var/run/sogo/sogo.pid"
            - "-WOPort"
            - "0.0.0.0:20000"
            # Logs to stdout
            - "-WOLogFile"
            - "-"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/sogo/
          ports:
            - name: http
              containerPort: 20000
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: nginx
          image: nginx:1.26-alpine
          ports:
            - name: http-nginx
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: static-data
              mountPath: /var/www/html
              readOnly: true
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/
              readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "sogo.fullname" . }}-conf
        - name: static-data
          emptyDir: {}
        - name: nginx-conf
          configMap:
            name: {{ include "sogo.fullname" . }}-nginx-conf
