# Default values for sogo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: shizacat/sogo
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Configuration
# https://www.sogo.nu/files/docs/SOGoInstallationGuide.html

config:
  # If true, config will be taken from config_raw
  use_raw: false

  # Config database connect
  # Example for mysql: mysql://sogo:sogo@127.0.0.1:3306/sogo
  database_url: postgresql://sogo:sogo@localhost:5432/sogo

  # SOGoUserSources
  user_sources: []
  # Example
  # - id: ...
  #   type: sql

  # Mail
  mail:
    # SOGoDraftsFolderName = Drafts;
    drafts_folder_name: "Drafts"
    # SOGoSentFolderName
    sent_folder_name: "Sent"
    # SOGoTrashFolderName
    trash_folder_name: "Trash"
    # SOGoJunkFolderName
    junk_folder_name: "Junk"
    # SOGoIMAPServer = "localhost"
    imap_server: "localhost"
    # SOGoSieveServer = "sieve://127.0.0.1:4190"
    sieve_server: ""
    # SOGoSMTPServer = "smtp://127.0.0.1"
    smtp_server: ""
    # SOGoMailDomain = acme.com
    mail_domain: ""
    # SOGoMailingMechanism = smtp
    mailing_mechanism: smtp
    # SOGoForceExternalLoginWithEmail = NO
    force_external_login_with_email: false
    # SOGoMailSpoolPath = /var/spool/sogo
    mail_spool_path: ""
    # NGImap4ConnectionStringSeparator
    imap4_connection_string_separator: "/"

  # General
  general:
    # SOGoLanguage
    language: English
    # SOGoTimeZone
    timezone: America/Montreal
  
  # Web interface
  interface:
    # SOGoPageTitle = SOGo;
    page_title: SOGo
    # SOGoVacationEnabled
    vacation_enabled: true
    # SOGoForwardEnabled
    forward_enabled: true
    # SOGoSieveScriptsEnabled
    sieve_scripts_enabled: true
    # SOGoMailAuxiliaryUserAccountsEnabled
    mail_auxiliary_user_accounts_enabled: true
    # SOGoTrustProxyAuthentication
    trust_proxy_authentication: false
    # SOGoXSRFValidationEnabled
    xsrf_validation_enabled: true

  # Debug
  debug:
    requests: false           # SOGoDebugRequests
    base_url: false           # SoDebugBaseURL
    imap: false               # ImapDebugEnabled
    ldap: false               # LDAPDebugEnabled
    pg: false                 # PGDebugEnabled
    mysql4: false             # MySQL4DebugEnabled
    ui_x: false               # SOGoUIxDebugEnabled
    dont_zip_response: false  # WODontZipResponse

config_raw: |
  {
    /* *********************  Main SOGo configuration file  **********************
    *                                                                           *
    * Since the content of this file is a dictionary in OpenStep plist format,  *
    * the curly braces enclosing the body of the configuration are mandatory.   *
    * See the Installation Guide for details on the format.                     *
    *                                                                           *
    * C and C++ style comments are supported.                                   *
    *                                                                           *
    * This example configuration contains only a subset of all available        *
    * configuration parameters. Please see the installation guide more details. *
    *                                                                           *
    * ~sogo/GNUstep/Defaults/.GNUstepDefaults has precedence over this file,    *
    * make sure to move it away to avoid unwanted parameter overrides.          *
    *                                                                           *
    * **************************************************************************/

    /* Database configuration (mysql://, postgresql:// or oracle://) */
    //SOGoProfileURL = "postgresql://sogo:sogo@localhost:5432/sogo/sogo_user_profile";
    //OCSFolderInfoURL = "postgresql://sogo:sogo@localhost:5432/sogo/sogo_folder_info";
    //OCSSessionsFolderURL = "postgresql://sogo:sogo@localhost:5432/sogo/sogo_sessions_folder";

    /* Mail */
    //SOGoDraftsFolderName = Drafts;
    //SOGoSentFolderName = Sent;
    //SOGoTrashFolderName = Trash;
    //SOGoJunkFolderName = Junk;
    //SOGoIMAPServer = "localhost";
    //SOGoSieveServer = "sieve://127.0.0.1:4190";
    //SOGoSMTPServer = "smtp://127.0.0.1";
    //SOGoMailDomain = acme.com;
    //SOGoMailingMechanism = smtp;
    //SOGoForceExternalLoginWithEmail = NO;
    //SOGoMailSpoolPath = /var/spool/sogo;
    //NGImap4ConnectionStringSeparator = "/";

    /* Notifications */
    //SOGoAppointmentSendEMailNotifications = NO;
    //SOGoACLsSendEMailNotifications = NO;
    //SOGoFoldersSendEMailNotifications = NO;

    /* Authentication */
    //SOGoPasswordChangeEnabled = YES;

    /* LDAP authentication example */
    //SOGoUserSources = (
    //  {
    //    type = ldap;
    //    CNFieldName = cn;
    //    UIDFieldName = uid;
    //    IDFieldName = uid; // first field of the DN for direct binds
    //    bindFields = (uid, mail); // array of fields to use for indirect binds
    //    baseDN = "ou=users,dc=acme,dc=com";
    //    bindDN = "uid=sogo,ou=users,dc=acme,dc=com";
    //    bindPassword = qwerty;
    //    canAuthenticate = YES;
    //    displayName = "Shared Addresses";
    //    hostname = "ldap://127.0.0.1:389";
    //    id = public;
    //    isAddressBook = YES;
    //  }
    //);

    /* LDAP AD/Samba4 example */
    //SOGoUserSources = (
    //  {
    //    type = ldap;
    //    CNFieldName = cn;
    //    UIDFieldName = sAMAccountName;
    //    baseDN = "CN=users,dc=domain,dc=tld";
    //    bindDN = "CN=sogo,CN=users,DC=domain,DC=tld";
    //    bindFields = (sAMAccountName, mail);
    //    bindPassword = password;
    //    canAuthenticate = YES;
    //    displayName = "Public";
    //    hostname = "ldap://127.0.0.1:389";
    //    filter = "mail = '*'";
    //    id = directory;
    //    isAddressBook = YES;
    //  }
    //);


    /* SQL authentication example */
    /*  These database columns MUST be present in the view/table:
    *    c_uid - will be used for authentication -  it's the username or username@domain.tld)
    *    c_name - which can be identical to c_uid -  will be used to uniquely identify entries
    *    c_password - password of the user, plain-text, md5 or sha encoded for now
    *    c_cn - the user's common name - such as "John Doe"
    *    mail - the user's mail address
    *  See the installation guide for more details
    */
    //SOGoUserSources =
    //  (
    //    {
    //      type = sql;
    //      id = directory;
    //      viewURL = "postgresql://sogo:sogo@127.0.0.1:5432/sogo/sogo_view";
    //      canAuthenticate = YES;
    //      isAddressBook = YES;
    //      userPasswordAlgorithm = md5;
    //    }
    //  );

    /* Web Interface */
    //SOGoPageTitle = SOGo;
    //SOGoVacationEnabled = YES;
    //SOGoForwardEnabled = YES;
    //SOGoSieveScriptsEnabled = YES;
    //SOGoMailAuxiliaryUserAccountsEnabled = YES;
    //SOGoTrustProxyAuthentication = NO;
    //SOGoXSRFValidationEnabled = YES;

    /* General - SOGoTimeZone *MUST* be defined */
    //SOGoLanguage = English;
    //SOGoTimeZone = America/Montreal;
    //SOGoCalendarDefaultRoles = (
    //  PublicDAndTViewer,
    //  ConfidentialDAndTViewer
    //);
    //SOGoSuperUsernames = (sogo1, sogo2); // This is an array - keep the parens!
    SxVMemLimit = 0;
    //WOPidFile = "/var/run/sogo/sogo.pid";
    //SOGoMemcachedHost = "/var/run/memcached.sock";
    
    /* Debug */
    //SOGoDebugRequests = YES;
    //SoDebugBaseURL = YES;
    //ImapDebugEnabled = YES;
    //LDAPDebugEnabled = YES;
    //PGDebugEnabled = YES;
    //MySQL4DebugEnabled = YES;
    //SOGoUIxDebugEnabled = YES;
    //WODontZipResponse = YES;
    //WOLogFile = /var/log/sogo/sogo.log;
  }
